generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model Defendant {
  id         String   @id @default(uuid())
  first_name String
  last_name  String
  dob        String
  height     Int
  weight     Int
  gender     String
  race       String
  reason     String
  createdAt  DateTime @default(now())
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  bounty     Bounty[]
}

model Bounty {
  id                String    @id @default(uuid())
  userId            String
  defendantId       String
  rewardAmount      Int
  caseNumber        String
  lastKnownLocation String
  note              String
  user              User      @relation(fields: [userId], references: [id])
  createdAt         DateTime  @default(now())
  defendant         Defendant @relation(fields: [defendantId], references: [id])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String      @id @default(cuid())
  name          String?
  email         String?     @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  bounty        Bounty[]
  defendant     Defendant[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
